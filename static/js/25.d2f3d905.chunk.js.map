{"version":3,"sources":["components/constants/states-chart-options.js","components/states.js","components/footer.js"],"names":["chartOptions","title","text","chart","type","height","series","name","data","legend","align","verticalAlign","layout","x","y","floating","tooltip","formatter","formatNumber","this","format","credits","enabled","xAxis","tickInterval","range","yAxis","min","tickAmount","titles","0","1","2","restOfTheStates","columns","label","field","sort","rows","React","memo","useState","options","setOptions","totalOptions","setTotalOptions","restOfTheStatesData","setRestOfTheStatesData","queryStringParams","queryString","parse","window","location","search","model","useEffect","axios","get","then","response","each","v","state","maxDate","max","predictions","map","result","date","dailyCofirmed","delta","confirmed","Date","getSeriesData","ttOptions","cloneDeep","push","orderBy","topStates","times","i","option","slice","drawTopCharts","length","code","STATE_NAMES","c","width","className","Helmet","content","style","animationDelay","index","key","highcharts","Highcharts","hover","searchTop","searchBottom","pagingTop","pagingBottom","responsive","striped","bordered","autoWidth","props","t","useTranslation","href","target","rel","justifyContent"],"mappings":"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","file":"static/js/25.d2f3d905.chunk.js","sourcesContent":["import {formatNumber} from '../../utils/commonfunctions';\n\nimport {format} from 'date-fns';\n\nexport const chartOptions = {\n  title: {\n    text: 'COVID-19 Predictions',\n  },\n  chart: {\n    type: 'spline',\n    height: 600,\n  },\n  series: [\n    {\n      name: 'AN',\n      data: [],\n    },\n  ],\n  legend: {\n    align: 'right',\n    verticalAlign: 'top',\n    layout: 'vertical',\n    x: -10,\n    y: 50,\n    floating: true,\n  },\n  tooltip: {\n    formatter: function () {\n      return (\n        '<b>' +\n        formatNumber(this.y) +\n        '</b><br/>' +\n        format(this.x, 'dd MMM, yyyy')\n      );\n    },\n  },\n  credits: {\n    enabled: false,\n  },\n  xAxis: {\n    type: 'datetime',\n    tickInterval: 30 * 24 * 3600 * 1000,\n    range: 12 * 30 * 24 * 3600 * 1000,\n  },\n  yAxis: {\n    title: {\n      text: 'Daily Reported Cases',\n    },\n    min: 0,\n    tickAmount: 10,\n  },\n};\n\nexport const titles = {\n  0: 'Top Seven States',\n  1: 'Second Highest Seven States',\n  2: 'Third Highest Seven States',\n};\n\nexport const restOfTheStates = {\n  columns: [\n    {\n      label: 'State',\n      field: 'code',\n      sort: 'asc',\n    },\n    {\n      label: 'Peak Confirmed Cases',\n      field: 'c',\n      sort: 'asc',\n    },\n    {\n      label: 'Peak Date',\n      field: 'date',\n      sort: 'asc',\n    },\n  ],\n  rows: [],\n};\n","import {\n  chartOptions,\n  titles,\n  restOfTheStates,\n} from './constants/states-chart-options';\nimport Footer from './footer';\n\nimport {STATE_NAMES} from '../constants';\n\nimport axios from 'axios';\nimport {format} from 'date-fns';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts/highstock';\nimport {map, each, orderBy, cloneDeep, times} from 'lodash';\nimport {MDBDataTable} from 'mdbreact';\nimport queryString from 'query-string';\nimport React, {useState, useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nfunction States() {\n  const [options, setOptions] = useState([]);\n  const [totalOptions, setTotalOptions] = useState({});\n  const [restOfTheStatesData, setRestOfTheStatesData] = useState({});\n  const queryStringParams = queryString.parse(window.location.search);\n  const model = (queryStringParams && queryStringParams.model) || '1.1740';\n\n  useEffect(() => {\n    axios\n      .get(`https://vics-core.github.io/covid-api/mi/${model}.json`)\n      .then((response) => {\n        updateSeriesData(response.data);\n      });\n\n    function updateSeriesData(data) {\n      each(data, function (v, state) {\n        const {predictions, max, maxDate} = getSeriesData(v);\n        if (state === 'TT') {\n          const ttOptions = cloneDeep(chartOptions);\n          ttOptions.title.text = 'Aggregated Prediction';\n          ttOptions.series = {\n            name: state,\n            data: predictions,\n            max: max,\n            maxDate: maxDate,\n          };\n          setTotalOptions(ttOptions);\n        } else {\n          chartOptions.series.push({\n            name: state,\n            data: predictions,\n            max: max,\n            maxDate: maxDate,\n          });\n        }\n      });\n      drawTopCharts();\n      setDataForTable();\n    }\n\n    function getSeriesData(v) {\n      let max = 0;\n      let maxDate;\n      const predictions = map(v, function (result, date) {\n        const dailyCofirmed = result.delta.confirmed || 0;\n        if (max < dailyCofirmed) {\n          max = dailyCofirmed;\n          maxDate = new Date(date);\n        }\n        return {x: new Date(date), y: dailyCofirmed};\n      });\n      return {predictions: predictions, max: max, maxDate: maxDate};\n    }\n\n    function drawTopCharts() {\n      chartOptions.series = orderBy(chartOptions.series, 'max', 'desc');\n      const topStates = [];\n      times(3, function (i) {\n        const option = cloneDeep(chartOptions);\n        option.title.text = titles[i];\n        option.series = chartOptions.series.slice(i * 7, (i + 1) * 7);\n        topStates.push(option);\n      });\n      setOptions(topStates);\n    }\n\n    function setDataForTable() {\n      each(chartOptions.series, function (series) {\n        if (series.data.length) {\n          restOfTheStates.rows.push({\n            code: STATE_NAMES[series.name],\n            c: series.max,\n            date: format(series.maxDate, 'dd MMM, yyyy'),\n            width: 200,\n          });\n        }\n      });\n      setRestOfTheStatesData(restOfTheStates);\n    }\n  }, [model]);\n\n  return (\n    <div className=\"States\">\n      <Helmet>\n        <title>States Predictions - seva.ml</title>\n        <meta name=\"title\" content={`States Predictions - seva.ml`} />\n        <meta\n          name=\"description\"\n          content=\"Charts to show state wise prediction.\"\n        />\n      </Helmet>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <h1>States Predictions</h1>\n        <h2>Model: {model}</h2>\n      </div>\n      <div className=\"charts\">\n        {options.map((option, index) => {\n          return (\n            <div className=\"chart\" key={index}>\n              <HighchartsReact\n                options={option}\n                highcharts={Highcharts}\n              ></HighchartsReact>\n            </div>\n          );\n        })}\n      </div>\n      <HighchartsReact\n        options={totalOptions}\n        highcharts={Highcharts}\n      ></HighchartsReact>\n      <div className=\"states-table\">\n        <MDBDataTable\n          hover\n          searchTop\n          searchBottom={false}\n          pagingTop\n          pagingBottom={false}\n          responsive\n          striped\n          bordered\n          data={restOfTheStatesData}\n          autoWidth\n        >\n          <caption>Peaks</caption>\n        </MDBDataTable>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default React.memo(States);\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h3>{t('Look forward and drive!')}</h3>\n      <div>\n        <a\n          href=\"https://www.facebook.com/indiacovidseva\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"facebook\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Facebook />\n        </a>\n\n        <a\n          href=\"https://twitter.com/indiacovidseva\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"twitter\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Twitter />\n        </a>\n\n        <a\n          href=\"https://www.linkedin.com/company/indiacovidseva\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"linkedin\"\n          style={{justifyContent: 'center'}}\n        >\n          <Icon.Linkedin />\n        </a>\n\n        <a\n          href=\"https://github.com/VICS-CORE/covid19india-react\"\n          className=\"github\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon.GitHub />\n        </a>\n      </div>\n\n      <h5>Built on covid19india.org</h5>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n"],"sourceRoot":""}