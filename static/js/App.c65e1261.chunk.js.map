{"version":3,"sources":["components/navbar.js","utils/ScrollToTop.js","App.js"],"names":["SLIDE_IN","position","transform","height","zIndex","SLIDE_OUT","SLIDE_IN_MOBILE","opacity","top","SLIDE_OUT_MOBILE","Expand","pages","setExpand","darkMode","windowSize","expandElement","useRef","t","useTranslation","className","ref","onMouseLeave","width","map","page","i","showInNavbar","to","pageLink","key","onClick","navLinkProps","animationDelayForNavbar","displayName","Navbar","setShowLanguageSwitcher","showLanguageSwitcher","i18n","currentLanguage","Object","keys","locales","includes","language","options","fallbackLng","useState","expand","useLockBodyScroll","useWindowSize","useSpring","spring","set","stop","transitions","useTransition","from","enter","leave","config","mass","tension","friction","div","style","prevState","href","onMouseEnter","Fragment","activeNavIcon","item","props","path","animationDelay","window","location","pathname","stroke","SunMoon","toggle","value","color","ScrollToTop","useLocation","useEffect","scrollTo","Home","lazy","FAQ","Demographics","State","Essentials","App","useDarkMode","React","ReactGA","pageview","search","view","fallback","render","index","exact","match","initialize","ReactDOM","Helmet","type","JSON","stringify","name","alternateName","url","image","document","getElementById"],"mappings":"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","file":"static/js/App.c65e1261.chunk.js","sourcesContent":["import locales from '../i18n/locales.json';\n\nimport React, {useState, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useSpring, useTransition, animated} from 'react-spring';\nimport {useLockBodyScroll, useWindowSize} from 'react-use';\n\nconst SLIDE_IN = {\n  position: 'absolute',\n  transform: 'translate3d(-20rem, 0, 0)',\n  height: '100vh',\n  zIndex: -1,\n};\n\nconst SLIDE_OUT = {\n  position: 'absolute',\n  transform: 'translate3d(10rem, 0, 0)',\n};\n\nconst SLIDE_IN_MOBILE = {\n  opacity: 1,\n  position: 'absolute',\n  height: '100vh',\n  top: 64,\n  zIndex: 999,\n};\n\nconst SLIDE_OUT_MOBILE = {\n  opacity: 1,\n  position: 'absolute',\n  height: '100vh',\n  top: 64,\n  zIndex: 999,\n};\n\nfunction Navbar({\n  pages,\n  darkMode,\n  showLanguageSwitcher,\n  setShowLanguageSwitcher,\n}) {\n  const {i18n, t} = useTranslation();\n  const currentLanguage = Object.keys(locales).includes(i18n?.language)\n    ? i18n?.language\n    : i18n?.options?.fallbackLng[0];\n\n  const [expand, setExpand] = useState(false);\n\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  const [spring, set, stop] = useSpring(() => ({opacity: 0}));\n  set({opacity: 1});\n  stop();\n\n  const transitions = useTransition(expand, null, {\n    from: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    enter: windowSize.width < 769 ? SLIDE_OUT_MOBILE : SLIDE_OUT,\n    leave: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    config: {mass: 1, tension: 210, friction: 26},\n  });\n\n  return (\n    <animated.div className=\"Navbar\" style={spring}>\n      <div\n        className=\"navbar-left\"\n        onClick={() => {\n          setShowLanguageSwitcher((prevState) => !prevState);\n        }}\n      >\n        {locales[currentLanguage]}\n      </div>\n\n      <div className=\"navbar-middle\">\n        <a href=\"https://indiacovid.seva.ml\">seva.ml</a>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (windowSize.width > 769) {\n            setExpand(true);\n          }\n        }}\n      >\n        {windowSize.width < 769 && (\n          <span>{expand ? t('Close') : t('Menu')}</span>\n        )}\n\n        {windowSize.width > 769 && (\n          <React.Fragment>\n            <span>\n              <Link to=\"/\">\n                <Icon.Home {...activeNavIcon('/')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/demographics\">\n                <Icon.Users {...activeNavIcon('/demographics')} />\n              </Link>\n            </span>\n            {/* <span>\n              <Link to=\"/essentials\">\n                <Icon.Package {...activeNavIcon('/essentials')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/about\">\n                <Icon.HelpCircle {...activeNavIcon('/about')} />\n              </Link>\n            </span> */}\n            <span>{windowSize.width > 768 && <SunMoon {...{darkMode}} />}</span>\n          </React.Fragment>\n        )}\n      </div>\n\n      {transitions.map(({item, key, props}) =>\n        item ? (\n          <animated.div key={key} style={props}>\n            <Expand {...{pages, setExpand, darkMode, windowSize}} />\n          </animated.div>\n        ) : (\n          <animated.div key={key} style={props}></animated.div>\n        )\n      )}\n    </animated.div>\n  );\n}\n\nfunction Expand({pages, setExpand, darkMode, windowSize}) {\n  const expandElement = useRef(null);\n  const {t} = useTranslation();\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        windowSize.width > 768 && setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {t(page.displayName)}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      {windowSize.width < 768 && <SunMoon {...{darkMode}} />}\n\n      {/* <div className=\"expand-bottom\">\n        <h5>{t('A crowdsourced initiative.')}</h5>\n      </div> */}\n    </div>\n  );\n}\n\nexport default Navbar;\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `${window.location.pathname === path ? 'focused' : ''}`,\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n\nconst SunMoon = ({darkMode}) => {\n  return (\n    <div\n      className=\"SunMoon\"\n      onClick={() => {\n        darkMode.toggle();\n      }}\n    >\n      <div>\n        {darkMode.value ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n      </div>\n    </div>\n  );\n};\n","import {useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const {pathname} = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import './App.scss';\nimport Navbar from './components/navbar';\nimport ScrollToTop from './utils/ScrollToTop';\n\nimport React, {lazy, useState, Suspense} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  useLocation\n} from 'react-router-dom';\nimport useDarkMode from 'use-dark-mode';\n\nimport ReactGA from 'react-ga';\nimport ReactDOM from 'react-dom';\n\nconst Home = lazy(() =>\n  import('./components/home' /* webpackChunkName: \"Home\" */)\n);\nconst FAQ = lazy(() =>\n  import('./components/faq' /* webpackChunkName: \"About\" */)\n);\nconst Demographics = lazy(() =>\n  import('./components/demographics' /* webpackChunkName: \"Demographics\" */)\n);\nconst State = lazy(() =>\n  import('./components/state' /* webpackChunkName: \"State\" */)\n);\nconst Essentials = lazy(() =>\n  import('./components/essentials' /* webpackChunkName: \"Essentials\" */)\n);\n\nconst LanguageSwitcher = lazy(() =>\n  import(\n    './components/languageswitcher' /* webpackChunkName: \"LanguageSwitcher\" */\n  )\n);\n\nconst schemaMarkup = {\n  '@context': 'http://schema.org/',\n  '@type': 'NonProfit',\n  name: 'Coronavirus Projections for India',\n  alternateName: 'COVID-19 Tracker',\n  url: 'https://seva.ml/',\n  image: 'https://www.covid19india.org/thumbnail.png',\n};\n\nReactGA.initialize('UA-165213678-1');\n\nfunction App() {\n  const darkMode = useDarkMode(false);\n  const [showLanguageSwitcher, setShowLanguageSwitcher] = useState(false);\n  let location = useLocation();\n  \n  React.useEffect(() => {\n    ReactGA.pageview(location.pathname + location.search);\n  }, [location]);\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: 'Home',\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: Demographics,\n      displayName: 'Demographics',\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/essentials',\n      view: Essentials,\n      displayName: 'Essentials',\n      showInNavbar: false,\n    },\n    {\n      pageLink: '/about',\n      view: FAQ,\n      displayName: 'About',\n      showInNavbar: false,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: 'State',\n      showInNavbar: false,\n    },\n  ];\n\n  return (\n      <Suspense fallback={<div />}>\n          <ScrollToTop />\n          <Navbar\n            pages={pages}\n            {...{darkMode}}\n            {...{showLanguageSwitcher, setShowLanguageSwitcher}}\n          />\n          <Route\n            render={({location}) => (\n              <React.Fragment>\n                <Switch location={location}>\n                  {pages.map((page, index) => {\n                    return (\n                      <Route\n                        exact\n                        path={page.pageLink}\n                        render={({match}) => <page.view />}\n                        key={index}\n                      />\n                    );\n                  })}\n                  <Redirect to=\"/\" />\n                </Switch>\n              </React.Fragment>\n            )}\n          />\n      </Suspense>\n  );\n}\n\nReactDOM.render(\n  <div className=\"App\">\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaMarkup)}\n        </script>\n      </Helmet>\n\n      {/* <Suspense fallback={<div />}>\n        <LanguageSwitcher\n          {...{showLanguageSwitcher, setShowLanguageSwitcher}}\n        />\n      </Suspense> */}\n\n      <Router>\n        <App/>\n      </Router>\n    </div>,\n  document.getElementById('root')\n);\n\nexport default App;\n"],"sourceRoot":""}